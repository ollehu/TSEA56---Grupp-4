
int direction = 0; // 0: norrut, 1: österut, 2: söderut, 3: västerut
//(int walls) Utifrån senaste sensordata, ange i vilka riktningar det finns väggar för den aktuella kartmodulen


if(direction norrut)
	//Rakt fram, höger, !!öppet söderut!!, vänster
if(direction österut)
	//Vänster, rakt fram, höger, !!öppet västerut!!
if(direction söderut)
	//!!öppet norrut!!, vänster, rakt fram, höger
if(direction västerut)
	//Höger, !!öppet österut!!, vänster, rakt fram

(walls & 0xC0) = 0xC0 => TRUE om det finns vägg norrut
(walls & 0x30) = 0x30 => TRUE om det finns vägg österut
(walls & 0x0C) = 0x0C => TRUE om det finns vägg söderut
(walls & 0x03) = 0x03 => TRUE om det finns vägg västerut

korridor höger: 
(direction norrut & !vägg österut) | (direction österut & !vägg söderut) |
	(direction söderut & !vägg västerut) | (direction västerut & !vägg norrut) 

if(korridor till höger){
	//Rotera höger och uppdatera vilken riktning roboten nu kör i
	//Kör framåt, uppdatera relevant koordinat
} else if(korridor framåt){
	//Kör framåt, uppdatera relevant koordinat
} else if (korridor till vänster){
	//Rotera vänster och uppdatera vilken riktning roboten nu kör i
	//Kör framåt, uppdatera relevant koordinat
} else {
	//Rotera 180 grader och uppdatera vilken riktning roboten nu kör i
	//Kör framåt, uppdatera relevant koordinat
}



Information att lagra för varje nod: för varje riktning, lagra om det finns väggar eller inte i respektive riktning.
Behöver hålla koll på vilket "väderstreck" som roboten kör i (tex ändra riktning vid rotation).

Avsökningsordning vid körning:
- Österut: -y, +x, +y
- Norrut: +x, +y, -x
- Västerut: +y, -x, -y
- Söderut: -x, -y, +x


AVSÖKNINGSALGORITM UTAN HÄNSYN TILL HUR KARTAN SKA REPRESENTERAS INTERNT	
//Läs av sensorer högersida
if(korridor till höger){
	//Rotera höger och uppdatera vilken riktning roboten nu kör i
	//Kör framåt, uppdatera relevant koordinat
} else {
	//Läs av sensor framåt
	if(korridor framåt){
	//Kör framåt, uppdatera relevant koordinat
	} else {
		//Läs av sensorer vänstersida
		if (korridor till vänster){
		//Rotera vänster och uppdatera vilken riktning roboten nu kör i
		//Kör framåt, uppdatera relevant koordinat
		} else {
			//Rotera 180 grader och uppdatera vilken riktning roboten nu kör i
			//Kör framåt, uppdatera relevant koordinat
		}
	}
}


